mk_add_options MOZ_OBJDIR=@TOPSRCDIR@/obj-asan
mk_add_options MOZ_MAKE_FLAGS="-s -j9"
mk_add_options AUTOCLOBBER=

# Enable ASan specific code and build workarounds
ac_add_options --enable-address-sanitizer

export LLVM_HOME="/home/kats/zspace/llvm"
export CC="$LLVM_HOME/build/Release/bin/clang"
export CXX="$LLVM_HOME/build/Release/bin/clang++"
export ASAN_SYMBOLIZER_PATH="$LLVM_HOME/build/Release/bin/llvm-symbolizer"

# Add ASan to our compiler flags
export CFLAGS="-fsanitize=address -Dxmalloc=myxmalloc"
export CXXFLAGS="-fsanitize=address -Dxmalloc=myxmalloc"

# Additionally, we need the ASan flag during linking. Normally, our C/CXXFLAGS would
# be used during linking as well but there is at least one place in our build where
# our CFLAGS are not added during linking.
# Note: The use of this flag causes Clang to automatically link the ASan runtime :)
export LDFLAGS="-fsanitize=address"

# Avoid using ASan flags when building host tools like nsinstall
export HOST_CFLAGS=" "
export HOST_CXXFLAGS=" "
export HOST_LDFLAGS=" "

# These three are required by ASan
ac_add_options --disable-jemalloc
ac_add_options --disable-crashreporter
ac_add_options --disable-elf-hack

# Keep symbols to symbolize ASan traces later
export MOZ_DEBUG_SYMBOLS=1
ac_add_options --enable-debug-symbols
ac_add_options --disable-install-strip

# Settings for a debug+opt build
ac_add_options --enable-optimize
ac_add_options --enable-debug

export MOZ_RUN_GTEST=1
